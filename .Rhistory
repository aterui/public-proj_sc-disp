mtext(lab, 3, line = 0.5, cex.axis = 1.2)
##axis
sapply(1:2, function(z) axis(z, las = z, cex.axis = 1.4) )
})
mtext("Dispersal distance (m)", 1, outer = T, cex = 1.5)
mtext("Frequency", 2, outer = T, cex = 1.5)
}
dev.off()
865+293
41+432
336+142
5168+980
199+728
271+1460
1368+479
1158/6148
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-03-29.csv")
dat <- dat_raw[dat_raw$species=="CRC",] # species: "STJ", "BHC", "CRC"
mean(dat$St_Size)
mean(dat$St_Size, na.rm=T)
sd(dat$St_Size, na.rm=T)
range(dat$St_Size, na.rm=T)
mean(dat$St_Size[dat$Yrecap==1,], na.rm=T)
mean(dat$St_Size[dat$Yrecap==1], na.rm=T)
sd(dat$St_Size[dat$Yrecap==1], na.rm=T)
round(mean(dat$St_Size[dat$Yrecap==1], na.rm=T), 1)
round(sd(dat$St_Size[dat$Yrecap==1], na.rm=T), 1)
dat <- dat_raw[dat_raw$species=="CRC",] # species: "STJ", "BHC", "CRC"
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
sp <- unique(dat_raw$species)
sp
sapply(sp, function(x)dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1,])
sapply(sp, function(x) dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"])
sapply(sp, function(x) mean(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"]) )
sp <- sort(unique(dat_raw$species))
sp
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-03-29.csv")
sp <- sort(unique(dat_raw$species))
sapply(sp, function(x) mean(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"]) )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-03-29.csv")
sp <- sort(unique(dat_raw$species))
mu <- sapply(sp, function(x) mean(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"]) )
SD <- sapply(sp, function(x) sd(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"]) )
mu
SD
round(mu,1)
round(SD,1)
mu <- sapply(sp, function(x) hist(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"]) )
mu <- sapply(sp, function(x) plot(density(dat_raw[dat_raw$species==sp[x]&dat_raw$Yrecap==1, "St_Size"])) )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-03-29.csv")
dat <- dat_raw[dat_raw$species=="CRC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
n.thin
# Script for figure 2
# Data and text ----
source("function_figure.R")
dat <- read.csv("data/data_itg2019-03-29.csv")
Panel <- rbind( c("(a)", "(b)", "(c)"),
c("(d)", "(e)", "(f)"),
c("(g)", "(h)", "(i)") )
Size <- c("Small", "Median", "Large")
Species <- c("BHC", "CRC", "STJ")
# Plot ----
pdf("figure_dispersal.pdf", 6, 6)
par(mfrow = c(3, 3), mar = c(1,2,1,0), oma=c(5,5,2,1))
for(i in 1:3){
SP <- Species[i]
dd <- dat[dat$species==SP,]
scl.size <- quantile(scale(dd$St_Size), c(0.2,0.5,0.8), na.rm = T)
est <- read.csv(paste0("result/summary_", SP, "2019-04-05Q99.csv") )
lambda0 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
lambda1 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[2,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
x <- seq(-xlim, xlim, length = 500)
Ylim <- max(unlist( sapply(1:3, function(i) ddexp(x, lambda0[i]) ) ) )
for(j in 1:3){
figure(lambda1 = lambda1[j], lambda0 = lambda0[j],
xlim = 350, ylim = Ylim,
xlab = ifelse(i==3, T, F), ylab = ifelse(j==1, T, F))
text(x = -150, y = Ylim, labels = paste0(Panel[i,j]," ", SP, ", ", Size[j]) )
}
}
mtext(text = "Distance (m)", 1, outer = T, line = 2)
mtext(text = "Probability density", 2, outer = T, line = 2.5)
dev.off()
# Script for figure 2
# Data and text ----
source("function_figure.R")
dat <- read.csv("data/data_itg2019-03-29.csv")
Panel <- rbind( c("(a)", "(b)", "(c)"),
c("(d)", "(e)", "(f)"),
c("(g)", "(h)", "(i)") )
Size <- c("Small", "Median", "Large")
Species <- c("BHC", "CRC", "STJ")
# Plot ----
pdf("figure_dispersal.pdf", 6, 6)
par(mfrow = c(3, 3), mar = c(1,2,1,0), oma=c(5,5,2,1))
for(i in 1:3){
SP <- Species[i]
dd <- dat[dat$species==SP,]
scl.size <- quantile(scale(dd$St_Size), c(0.2,0.5,0.8), na.rm = T)
est <- read.csv(paste0("result/summary_", SP, "2019-04-05Q99.csv") )
lambda0 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
lambda1 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[2,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
x <- seq(-xlim, xlim, length = 500)
Ylim <- max(unlist( sapply(1:3, function(i) ddexp(x, lambda0[i]) ) ) )
for(j in 1:3){
figure(lambda1 = lambda1[j], lambda0 = lambda0[j],
xlim = 350, ylim = Ylim,
xlab = ifelse(i==3, T, F), ylab = ifelse(j==1, T, F))
text(x = -150, y = Ylim, labels = paste0(Panel[i,j]," ", SP, ", ", Size[j]) )
}
}
mtext(text = "Distance (m)", 1, outer = T, line = 2)
mtext(text = "Probability density", 2, outer = T, line = 2.5)
dev.off()
dat$X
dat$Y
dat$Y*20
max(abs(dat$Y*20))
max(abs(dat$Y*20), na.rm=T)
# Script for figure 2
# Data and text ----
source("function_figure.R")
dat <- read.csv("data/data_itg2019-03-29.csv")
Panel <- rbind( c("(a)", "(b)", "(c)"),
c("(d)", "(e)", "(f)"),
c("(g)", "(h)", "(i)") )
Size <- c("Small", "Median", "Large")
Species <- c("BHC", "CRC", "STJ")
# Plot ----
pdf("figure_dispersal.pdf", 6, 6)
par(mfrow = c(3, 3), mar = c(1,2,1,0), oma=c(5,5,2,1))
xlim <- 350
for(i in 1:3){
SP <- Species[i]
dd <- dat[dat$species==SP,]
scl.size <- quantile(scale(dd$St_Size), c(0.2,0.5,0.8), na.rm = T)
est <- read.csv(paste0("result/summary_", SP, "2019-04-05Q99.csv") )
lambda0 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
lambda1 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[2,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
x <- seq(-xlim, xlim, length = 500)
Ylim <- max(unlist( sapply(1:3, function(i) ddexp(x, lambda0[i]) ) ) )
for(j in 1:3){
figure(lambda1 = lambda1[j], lambda0 = lambda0[j],
xlim = 350, ylim = Ylim,
xlab = ifelse(i==3, T, F), ylab = ifelse(j==1, T, F))
text(x = -150, y = Ylim, labels = paste0(Panel[i,j]," ", SP, ", ", Size[j]) )
}
}
mtext(text = "Distance (m)", 1, outer = T, line = 2)
mtext(text = "Probability density", 2, outer = T, line = 2.5)
dev.off()
# Script for figure 2
# Data and text ----
source("function_figure.R")
dat <- read.csv("data/data_itg2019-03-29.csv")
Panel <- rbind( c("(a)", "(b)", "(c)"),
c("(d)", "(e)", "(f)"),
c("(g)", "(h)", "(i)") )
Size <- c("Small", "Median", "Large")
Species <- c("BHC", "CRC", "STJ")
# Plot ----
pdf("figure_dispersal.pdf", 6, 6)
par(mfrow = c(3, 3), mar = c(1,2,1,0), oma=c(5,5,2,1))
xlim <- 500
for(i in 1:3){
SP <- Species[i]
dd <- dat[dat$species==SP,]
scl.size <- quantile(scale(dd$St_Size), c(0.2,0.5,0.8), na.rm = T)
est <- read.csv(paste0("result/summary_", SP, "2019-04-05Q99.csv") )
lambda0 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
lambda1 <- sapply(scl.size, function(x) 1/exp(est[1,"X50."] + est[2,"X50."] + est[3,"X50."]*x + est[5,"X50."]*0.5) )
x <- seq(-xlim, xlim, length = 500)
Ylim <- max(unlist( sapply(1:3, function(i) ddexp(x, lambda0[i]) ) ) )
for(j in 1:3){
figure(lambda1 = lambda1[j], lambda0 = lambda0[j],
xlim = 350, ylim = Ylim,
xlab = ifelse(i==3, T, F), ylab = ifelse(j==1, T, F))
text(x = -150, y = Ylim, labels = paste0(Panel[i,j]," ", SP, ", ", Size[j]) )
}
}
mtext(text = "Distance (m)", 1, outer = T, line = 2)
mtext(text = "Probability density", 2, outer = T, line = 2.5)
dev.off()
# Script for figure S1-3
# Library ----
library(stringr)
# Data ----
dat <- read.csv("data/data_itg2019-03-29.csv")
dat$Y_m <- dat$Y*20
dat$Label <- paste0(dat$St_Month, "-", dat$St_Year, " to ", dat$End_Month, "-", dat$End_Year)
SP <- sort(unique(dat$species) )
# Plot ----
pdf("figure_raw_dispersal.pdf", width = 13, height = 12)
for(i in 1:length(SP) ){
par(mfrow = c(4, 4), oma = c(3,3,2,1) )
dd <- dat[dat$species==SP[i],]
sapply(1:length(unique(dd$Period) ),
function(x){
##plot
plot(table(dd$Y_m[dd$Period == x]),
axes = F, ann = F, col = ifelse(unique(dd$Q99[dd$Period == x]) >= 1, "red", "black"),
xlim = c(-max(abs(dd$Y_m), na.rm = T),
max(abs(dd$Y_m), na.rm = T) ) )
legend("topright", bty = "n", cex = 1.5,
legend = substitute("N = "*v1, list(v1 = sum(dd$Yrecap[dd$Period == x]) ) ) )
##panel label
St_Month <- sort(unique(dd[dd$Period == x, "St_Month"]) )
St_Year <- unique(dd[dd$Period == x, "St_Year"])
End_Month <- sort(na.omit(unique(dd[dd$Period == x, "End_Month"]) ) )
End_Year <- na.omit(unique(dd[dd$Period == x, "End_Year"]) )
lab <- paste0(str_sub(month.name[St_Month[1]], 1, 3), "-", St_Year,
" to ",
str_sub(month.name[End_Month[1]], 1, 3), "-", End_Year)
mtext(lab, 3, line = 0.5, cex.axis = 1.2)
##axis
sapply(1:2, function(z) axis(z, las = z, cex.axis = 1.4) )
})
mtext("Dispersal distance (m)", 1, outer = T, cex = 1.5)
mtext("Frequency", 2, outer = T, cex = 1.5)
}
dev.off()
source("function_f_env.R")
# Water level and temperature data ----
##Water level
WL <- read.csv("data/WaterLevel_edit.csv")
##Water temperature
WT <- read.csv("data/WaterTemp_data.csv"); WT <- WT[is.na(WT$Indian_Temp)==0,]
WT$Date <- as.Date(WT$Date)
WT$Jdate <- julian.Date(WT$Date)
# Data sort ----
##Todd
###Compile by-species data
dat1 <- read.csv("data/Vdata_Todd_STJ2019-01-13.csv"); dat1$species <- "STJ"
dat2 <- read.csv("data/Vdata_Todd_BHC2019-01-13.csv"); dat2$species <- "BHC"
dat3 <- read.csv("data/Vdata_Todd_CRC2019-01-13.csv"); dat3$species <- "CRC"
datT <- rbind(dat1, dat2, dat3)
datT$Stream <- "Todd"
datT
occID <- sort( unique(D$Occasion) ) # occasionID
# Call library ----
library(stringr)
# Data ----
## Define data source
d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
#d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
## Re-define
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# Data sort ----
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
unique(ococcID)
unique(occID)
length(unique(occID))
# Call library ----
library(stringr)
# Data ----
## Define data source
d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
#d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
## Re-define
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# Data sort ----
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
mat_size <- mat_sec <- mat_date <- mat_month <- mat_year <- matrix(nrow = length(indID), ncol = length(occID))
for(i in 1:length(indID) ){
tmp <- D[D$TAGID == indID[i],]
for(j in 1:nrow(tmp)){
mat_sec[i,tmp$Occasion[j]] <- tmp$SEC[j] #Section ID
mat_size[i,tmp$Occasion[j]] <- tmp$LEN_COR[j] #Body size
mat_date[i,tmp$Occasion[j]] <- julian.Date(tmp$as.date[j]) #Julian date
mat_month[i,tmp$Occasion[j]] <- as.numeric(tmp$Month[j]) #Month
mat_year[i,tmp$Occasion[j]] <- as.numeric(tmp$Year[j]) #Year
}
print(substitute(var1/var2, list(var1 = i, var2 = length(indID)) ) )
}
tmp
indID
# Call library ----
library(stringr)
# Data ----
## Define data source
d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
#d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
## Re-define
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# Data sort ----
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
mat_size <- mat_sec <- mat_date <- mat_month <- mat_year <- matrix(nrow = length(indID), ncol = length(occID))
for(i in 1:length(indID) ){
tmp <- D[D$TAGID == indID[i],]
for(j in 1:nrow(tmp)){
mat_sec[i,tmp$Occasion[j]] <- tmp$SEC[j] #Section ID
mat_size[i,tmp$Occasion[j]] <- tmp$LEN_COR[j] #Body size
mat_date[i,tmp$Occasion[j]] <- julian.Date(tmp$as.date[j]) #Julian date
mat_month[i,tmp$Occasion[j]] <- as.numeric(tmp$Month[j]) #Month
mat_year[i,tmp$Occasion[j]] <- as.numeric(tmp$Year[j]) #Year
}
print(substitute(var1/var2, list(var1 = i, var2 = length(indID)) ) )
}
# Vectorize data ----
## Convert location data to displacement distance or recapture history
source("function_getY.R"); source("function_getYrecap.R"); source("function_getlimit.R")
start_occ <- 3 # starting at occation 3
ulimit <- max(d$SEC) # upper distance class limit (must use dataframe "d" to represent maximum)
Y <- getY(mat_sec, start = start_occ); colnames(Y) <- NULL # Displacement section
Interval <- getY(mat_date, start = start_occ); colnames(Interval) <- NULL # capture-recapture interval
Yrecap <- getYrecap(mat_sec, start = start_occ); colnames(Yrecap) <- NULL # recaptured or not
Ylimit <- getlimit(mat_sec, start = start_occ, ulimit = ulimit, truncation = F) # observable range of displacement
St_Size <- mat_size[, start_occ:(ncol(mat_size)-1)] # St: at capture trial
St_Date <- mat_date[, start_occ:(ncol(mat_date)-1)]
St_Month <- mat_month[, start_occ:(ncol(mat_month)-1)]
St_Year <- mat_year[, start_occ:(ncol(mat_year)-1)]
End_Size <- mat_size[, (start_occ+1):ncol(mat_size)] # End: at recapture trial
End_Date <- mat_date[, (start_occ+1):ncol(mat_date)]
End_Month <- mat_month[, (start_occ+1):ncol(mat_month)]
End_Year <- mat_year[, (start_occ+1):ncol(mat_year)]
## Remove unmarked individuals in occations "start_occ" to 15
cap <- apply(Yrecap, 1, function(x) ifelse(all(is.na(x)), 0, 1) )
indID <- indID[which(cap == 1)]
Y <- Y[which(cap == 1),]
Interval <- Interval[which(cap == 1),]
Yrecap <- Yrecap[which(cap == 1),]
DL <- Ylimit$DL[which(cap == 1),] # Downstream limit of observation
UL <- Ylimit$UL[which(cap == 1),] # Upstream limit of observation
St_Size <- St_Size[which(cap == 1), ]
St_Date <- St_Date[which(cap == 1), ]
St_Month <- St_Month[which(cap == 1), ]
St_Year <- St_Year[which(cap == 1), ]
End_Size <- End_Size[which(cap == 1), ]
End_Date <- End_Date[which(cap == 1), ]
End_Month <- End_Month[which(cap == 1), ]
End_Year <- End_Year[which(cap == 1), ]
# Call library ----
library(stringr)
# Data ----
## Define data source
#d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
## Re-define
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# Data sort ----
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
mat_size <- mat_sec <- mat_date <- mat_month <- mat_year <- matrix(nrow = length(indID), ncol = length(occID))
for(i in 1:length(indID) ){
tmp <- D[D$TAGID == indID[i],]
for(j in 1:nrow(tmp)){
mat_sec[i,tmp$Occasion[j]] <- tmp$SEC[j] #Section ID
mat_size[i,tmp$Occasion[j]] <- tmp$LEN_COR[j] #Body size
mat_date[i,tmp$Occasion[j]] <- julian.Date(tmp$as.date[j]) #Julian date
mat_month[i,tmp$Occasion[j]] <- as.numeric(tmp$Month[j]) #Month
mat_year[i,tmp$Occasion[j]] <- as.numeric(tmp$Year[j]) #Year
}
print(substitute(var1/var2, list(var1 = i, var2 = length(indID)) ) )
}
773+258
# Vectorize data ----
## Convert location data to displacement distance or recapture history
source("function_getY.R"); source("function_getYrecap.R"); source("function_getlimit.R")
start_occ <- 3 # starting at occation 3
ulimit <- max(d$SEC) # upper distance class limit (must use dataframe "d" to represent maximum)
Y <- getY(mat_sec, start = start_occ); colnames(Y) <- NULL # Displacement section
Interval <- getY(mat_date, start = start_occ); colnames(Interval) <- NULL # capture-recapture interval
Yrecap <- getYrecap(mat_sec, start = start_occ); colnames(Yrecap) <- NULL # recaptured or not
Ylimit <- getlimit(mat_sec, start = start_occ, ulimit = ulimit, truncation = F) # observable range of displacement
St_Size <- mat_size[, start_occ:(ncol(mat_size)-1)] # St: at capture trial
St_Date <- mat_date[, start_occ:(ncol(mat_date)-1)]
St_Month <- mat_month[, start_occ:(ncol(mat_month)-1)]
St_Year <- mat_year[, start_occ:(ncol(mat_year)-1)]
End_Size <- mat_size[, (start_occ+1):ncol(mat_size)] # End: at recapture trial
End_Date <- mat_date[, (start_occ+1):ncol(mat_date)]
End_Month <- mat_month[, (start_occ+1):ncol(mat_month)]
End_Year <- mat_year[, (start_occ+1):ncol(mat_year)]
## Remove unmarked individuals in occations "start_occ" to 15
cap <- apply(Yrecap, 1, function(x) ifelse(all(is.na(x)), 0, 1) )
indID <- indID[which(cap == 1)]
length(indID)
# Call library ----
library(stringr)
# Data ----
## Define data source
d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
#d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
## Re-define
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# Data sort ----
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
mat_size <- mat_sec <- mat_date <- mat_month <- mat_year <- matrix(nrow = length(indID), ncol = length(occID))
for(i in 1:length(indID) ){
tmp <- D[D$TAGID == indID[i],]
for(j in 1:nrow(tmp)){
mat_sec[i,tmp$Occasion[j]] <- tmp$SEC[j] #Section ID
mat_size[i,tmp$Occasion[j]] <- tmp$LEN_COR[j] #Body size
mat_date[i,tmp$Occasion[j]] <- julian.Date(tmp$as.date[j]) #Julian date
mat_month[i,tmp$Occasion[j]] <- as.numeric(tmp$Month[j]) #Month
mat_year[i,tmp$Occasion[j]] <- as.numeric(tmp$Year[j]) #Year
}
print(substitute(var1/var2, list(var1 = i, var2 = length(indID)) ) )
}
# Vectorize data ----
## Convert location data to displacement distance or recapture history
source("function_getY.R"); source("function_getYrecap.R"); source("function_getlimit.R")
start_occ <- 3 # starting at occation 3
ulimit <- max(d$SEC) # upper distance class limit (must use dataframe "d" to represent maximum)
Y <- getY(mat_sec, start = start_occ); colnames(Y) <- NULL # Displacement section
Interval <- getY(mat_date, start = start_occ); colnames(Interval) <- NULL # capture-recapture interval
Yrecap <- getYrecap(mat_sec, start = start_occ); colnames(Yrecap) <- NULL # recaptured or not
Ylimit <- getlimit(mat_sec, start = start_occ, ulimit = ulimit, truncation = F) # observable range of displacement
St_Size <- mat_size[, start_occ:(ncol(mat_size)-1)] # St: at capture trial
St_Date <- mat_date[, start_occ:(ncol(mat_date)-1)]
St_Month <- mat_month[, start_occ:(ncol(mat_month)-1)]
St_Year <- mat_year[, start_occ:(ncol(mat_year)-1)]
End_Size <- mat_size[, (start_occ+1):ncol(mat_size)] # End: at recapture trial
End_Date <- mat_date[, (start_occ+1):ncol(mat_date)]
End_Month <- mat_month[, (start_occ+1):ncol(mat_month)]
End_Year <- mat_year[, (start_occ+1):ncol(mat_year)]
## Remove unmarked individuals in occations "start_occ" to 15
cap <- apply(Yrecap, 1, function(x) ifelse(all(is.na(x)), 0, 1) )
indID <- indID[which(cap == 1)]
length(indID)
728+199
Y
max(d$SEC)
St_Size
cap
IND_ID <- rep( indID, ncol(Y) )
IND_ID
# Basic statistics
dat_raw <- read.csv("data/data_itg2019-03-29.csv")
datT <- dat_raw[dat_raw$Stream=="Todd",]
datI <- dat_raw[dat_raw$Stream=="Indian",]
fmr <- function(dat){
Mark_u <- tapply(dat$IND_ID, dat$species, function(x) length(unique(x) ) )
Recap_u <- tapply(dat$IND_ID[dat$Yrecap==1], dat$species[dat$Yrecap==1],
function(x) length(unique(x) ) )
Mark_repl <- tapply(dat$IND_ID, dat$species, function(x) length(x) )
Recap_repl <- tapply(dat$IND_ID[dat$Yrecap==1], dat$species[dat$Yrecap==1],
function(x) length(x) )
return(list(Mark_u = Mark_u, Recap_u = Recap_u,
Mark_repl = Mark_repl, Recap_repl = Recap_repl) )
}
fmr(datT)
fmr(datI)
