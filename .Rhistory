#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
e
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 2; rate <- 0.5
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- 1:N_patch#rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
plot(X[1,])
plot(X[2,])
plot(X[3,])
R
plot(X[5,])
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 2; rate <- 0.5
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rnorm(N_patch, 10,100); R[R<0] <- 0#rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 2; rate <- 0.5
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rnorm(N_patch, 10,100); R[R<0] <- 0.001#rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 2; rate <- 0.5
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rnorm(N_patch, 1000,100); R[R<0] <- 0.001#rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 2; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 0.5; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 0.05; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0); dtb[1] <- 1
shape <- 0.5; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0.1); dtb[1] <- 1
shape <- 0.5; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0.1); dtb[1] <- 1
shape <- 0.05; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
nbf <- function(x){ c(2, lapply(2:(length(x) - 1), function(k) c(k - 1, k + 1)), length(x)-1) }
# N_patch: number of patches
# R: Resource abundance
# nbID: patch ID of neighbors
# rs: Relative selection probability
N_patch <- 100; N_time <- 365
N_ind <- 1000
X <- matrix(NA, nrow = N_ind, ncol = N_time)
X[,1] <- ceiling( runif(N_ind, 0, N_patch) ) # initial location
nbID <- nbf(1:N_patch)
dtb <- rbinom(N_time, 1, 0.01); dtb[1] <- 1
shape <- 0.05; rate <- 0.01
for(t in 1:(N_time-1) ){
if(dtb[t] == 1){
# RS: relative habitat selection matrix
R <- rgamma(N_patch, shape = shape, rate = rate) # E(R) = s/r; Var(R) = s/r^2
e <- lapply(1:N_patch, function(i) mean(R[ nbID[[i]] ])/(R[i] + mean(R[nbID[[i]]]) ) )
e <- unlist(e)
rs <- lapply(1:N_patch, function(i) R[ nbID[[i]] ]/sum(R[ nbID[[i]] ]) )
RS <- matrix(0, N_patch, N_patch)
}
for(i in 1:N_patch){ RS[i, nbID[[i]]] <- rs[[i]] }
E <- sapply(X[,t], function(i) rbinom(1, 1, e[i]) )
x <- sapply(1:N_ind, function(k) sample(1:N_patch, 1, prob = RS[X[k,t],]) )
X[,t+1] <- X[,t]
for(k in which(E==1)){ X[k,t+1] <- x[k] }
}
Y <- abs(X[,100]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
#lines(dgeom(0:max(Y), prob = mean(Y==0)) ~ x)
Y <- abs(X[,200]-X[,51])
x <- 0:max(Y)
plot(table(Y)/N_ind )
plot(X[1,])
plot(X[2,])
plot(X[3,])
plot(X[3,],type="l")
plot(X[4,],type="l")
plot(X[5,],type="l")
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="STJ",] # species: "STJ", "BHC", "CRC"
plot(table(abs(D$Y)))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y)))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(Todd_WL~Date, D, pch=21, col=NA, bg = c(rgb(1,0,0,0.2),rgb(0,1,0,0.2))[factor(D$Wet)])
D <- read.csv("data/waterlevel.csv")
Temp <- read.csv("data/WaterTemp_data.csv")
D$Date <- as.Date(D$Date)
D$Month <- format(D$Date, format = "%m")
D$Year <- format(D$Date, format = "%y")
D$Jdate <- julian.Date(D$Date)
D$Wet <- ifelse(as.numeric(D$Month)<5,1,0)
#write.csv(D, "data/waterlevel_edit.csv")
plot(Todd_WL~Date, D, pch=21, col=NA, bg = c(rgb(1,0,0,0.2),rgb(0,1,0,0.2))[factor(D$Wet)])
# --- Data preparation ---
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="STJ",] # species: "STJ", "BHC", "CRC"
D <- dat[is.na(dat$St_Size)==0,]
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
pdf("test.pdf",5,5)
plot(table(abs(D$Y[D$Q99==0]))/length(D$Y[D$Q99==0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
plot(table(abs(D$Y[D$Q99>0]))/length(D$Y[D$Q99>0]), ylim=c(0,0.2), xlim=range(abs(D$Y),na.rm=T))
dev.off()
# --- Data preparation ---
##Water level
WL <- read.csv("data/WaterLevel_edit.csv")
# --- Call library ---
library(stringr)
# --- Data ---
#d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
head(d)
occID <- sort( unique(D$Occasion) ) # occasionID
# --- Call library ---
library(stringr)
# --- Data ---
#d <- read.csv("data/Indian_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Indian"
d <- read.csv("data/Todd_final.csv"); d <- d[,1:which(colnames(d)=="COMMENTS")]; stream <- "Todd"
d$LEN_COR <- as.numeric(as.character(d$LEN_COR))
d$Year <- str_sub(d$Date, start = 1, end = 4)
d$Month <- str_sub(d$Date, start = 5, end = 6)
d$Day <- str_sub(d$Date, start = 7, end = 8)
d$as.date <- as.Date(paste(d$Year,d$Month,d$Day, sep="/"))
# --- Data sort ---
## Remove data without tag info
D <- d[-which(is.na(d$TAGID)),]
## Select species
b <- unique(D$SPE)
species <- "CRC" #MTS, CRC, BHC, STJ
D <- D[D$SPE == species,]
## Reshape data
indID <- sort( unique(D$TAGID) ) # individual tagID
occID <- sort( unique(D$Occasion) ) # occasionID
mat_size <- mat_sec <- mat_date <- mat_month <- mat_year <- matrix(nrow = length(indID), ncol = length(occID))
occID
# --- Data preparation ---
library(lme4)
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="STJ",] # species: "STJ", "BHC", "CRC"
D <- dat[is.na(dat$St_Size)==0,]
#D$growth[D$growth<0] <- 0
plot(growth ~ I(Q99>0), D, pch=21, cex=1.5, col=NA, bg=grey(0,0.1))
# --- Data preparation ---
library(lme4)
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="STJ",] # species: "STJ", "BHC", "CRC"
D <- dat[is.na(dat$St_Size)==0,]
source("function_growth.R")
D$growth <- fg(L0 = D$St_Size, L1 = D$End_Size, duration = D$Interval)
#D$growth[D$growth<0] <- 0
plot(growth ~ I(Q99>0), D, pch=21, cex=1.5, col=NA, bg=grey(0,0.1))
plot(growth~Q99,D)
plot(growth~abs(Y),D)
summary(lmer(growth ~ Temp+abs(Y) + Stream + (1|IND_ID), D))
summary(lmer(growth ~ Temp+abs(Y) + Stream + St_Size + (1|IND_ID), D))
summary(lmer(growth ~ Temp + abs(Y) + Stream + (1|IND_ID), D))
D$growth[D$growth<0] <- 0
plot(growth ~ I(Q99>0), D, pch=21, cex=1.5, col=NA, bg=grey(0,0.1) )
summary(lmer(growth ~ Temp + abs(Y) + Stream + (1|IND_ID), D))
summary(lmer(growth ~ Temp + abs(Y>0) + Stream + (1|IND_ID), D))
# --- Data preparation ---
library(lme4)
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="BHC",] # species: "STJ", "BHC", "CRC"
D <- dat[is.na(dat$St_Size)==0,]
source("function_growth.R")
D$growth <- fg(L0 = D$St_Size, L1 = D$End_Size, duration = D$Interval)
D$growth[D$growth<0] <- 0
plot(growth ~ I(Q99>0), D, pch=21, cex=1.5, col=NA, bg=grey(0,0.1) )
summary(lmer(growth ~ Temp + abs(Y>0) + Stream + (1|IND_ID), D))
summary(lmer(growth ~ Temp + abs(Y) + Stream + (1|IND_ID), D))
boxplot(growth ~ I(Q99>0), D, pch=21, cex=1.5, col=NA, bg=grey(0,0.1) )
summary(lmer(growth ~ Temp + abs(Y) + I(Q99>0) + Stream + (1|IND_ID), D))
# --- Data preparation ---
dat <- read.csv("data/data_itg2019-01-16.csv")
dat <- dat[dat$species=="CRC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# --- Data for JAGS ---
##Response
Y <- D$Y*20 #Transfer from section displacement to meter displacement (Y is the number of sections displaced)
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) )
Stream <- as.numeric(D$Stream) - 1
Disturb <- as.numeric(D$Q99 > 0)
Temp <- c(scale(D$Temp) )
##Control
Interval <- D$Interval
DL <- c(D$DL*20)
UL <- c(D$UL*20)
Djags <- list( Y = Y, Yrecap = Yrecap, Nsample = length(Y), DL = DL, UL = UL,
Size = Size, Stream = Stream, Disturb = Disturb, Temp = Temp,
Interval = Interval )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 4)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3)
# --- Output ---
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
write.csv(re$summary[,c(5,3,7,8,9)], paste0("result/summary_", species, Sys.Date(),".csv") )
write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(),".csv") )
PP
plot(D$Stream, Stream)
