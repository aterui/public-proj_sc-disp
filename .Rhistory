dat_itg <- dat_itg[,-1]# removing redundunt columns
write.csv(dat_itg, paste0("data/data_itg",Sys.Date(),".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
View(dat_raw)
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
mean(is.na(dat$St_Size))
dat[is.na(dat$St_Size),]
dat <- dat_raw[dat_raw$species=="CRC",] # species: "STJ", "BHC", "CRC"
dat[is.na(dat$St_Size),]
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
dat[is.na(dat$St_Size),]
# Data for JAGS ----
##Response
Y <- D$Sec_cap*20-10 #Conversion from section ID to distance (m) to the downstream end
Y
Y-D$UL
# Data for JAGS ----
##Response
Y <- D$Sec_cap*20-10 #Conversion from section ID to distance (m) to the downstream end
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from section ID to distance (m) to the downstream end
D$UL-Y
Y
cbind(Y,D$UL)
cbind(Y,D$UL,D$DL)
mean(D$Ydisplace == I(D$Sec_recap-D$Sec_cap), na.rm=T)
source("function_f_env.R")
# Water level and temperature data ----
##Water level
WL <- read.csv("data/WaterLevel_edit.csv")
##Water temperature
WT <- read.csv("data/WaterTemp_data.csv"); WT <- WT[is.na(WT$Indian_Temp)==0,]
WT$Date <- as.Date(WT$Date)
WT$Jdate <- julian.Date(WT$Date)
# Data sort ----
##Todd
###Compile by-species data
dat1 <- read.csv("data/Vdata_Todd_STJ2019-10-24.csv"); dat1$species <- "STJ"
dat2 <- read.csv("data/Vdata_Todd_BHC2019-10-24.csv"); dat2$species <- "BHC"
dat3 <- read.csv("data/Vdata_Todd_CRC2019-10-24.csv"); dat3$species <- "CRC"
datT <- rbind(dat1, dat2, dat3)
datT$Stream <- "Todd"
wl_Todd <- data.frame(WaterLevel = WL$Todd_WL, Jdate = WL$Jdate)
wt_Todd <- data.frame(Temp = WT$Todd_Temp, Jdate = WT$Jdate)
datT <- f_env(dat = datT, WL = wl_Todd, WT = wt_Todd)
datT$UL <- ifelse(datT$Yrecap == 1, datT$Sec_recap*20, 520)
datT$DL <- ifelse(datT$Yrecap == 1, datT$Sec_recap*20-20, 0)
##Indian
###Compile by-species data
dat4 <- read.csv("data/Vdata_Indian_STJ2019-10-24.csv"); dat4$species <- "STJ"
dat5 <- read.csv("data/Vdata_Indian_BHC2019-10-24.csv"); dat5$species <- "BHC"
dat6 <- read.csv("data/Vdata_Indian_CRC2019-10-24.csv"); dat6$species <- "CRC"
datI <- rbind(dat4, dat5, dat6)
datI$Stream <- "Indian"
wl_Indian <- data.frame(WaterLevel = WL$Indian_WL, Jdate = WL$Jdate)
wt_Indian <- data.frame(Temp = WT$Indian_Temp, Jdate = WT$Jdate)
datI <- f_env(dat = datI, WL = wl_Indian, WT = wt_Indian)
datI$UL <- ifelse(datI$Yrecap == 1, datI$Sec_recap*20, 740)
datI$DL <- ifelse(datI$Yrecap == 1, datI$Sec_recap*20-20, 0)
# Integrate data ----
dat_itg <- rbind(datT, datI)
colnames(dat_itg)[colnames(dat_itg)=="Y"] <- "Ydisplace"
dat_itg <- dat_itg[,-1]# removing redundunt columns
write.csv(dat_itg, paste0("data/data_itg",Sys.Date(),".csv") )
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from section ID to distance (m) to the downstream end
cbind(Y,D$UL,D$DL)
mean(Y-D$UL,na.rm=t)
mean(Y-D$UL,na.rm=T)
mean(Y-D$DL,na.rm=T)
D$DL
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
Interval = Interval )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
Interval = Interval )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
Interval = Interval )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="BHC",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
Interval = Interval )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
log.Int = log(Interval) )
para <- c("b", "sigma", "phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
mean(Yrecap)
exp(3.84)
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(IND_ID), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
log.Int = log(Interval) )
para <- c("b", "sigma", "mu.phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
IND_ID
unique(IND_ID)
length(unique(IND_ID))
max(unique(IND_ID))
Nind
Djags
Djags$Nind
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(unique(IND_ID)), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
log.Int = log(Interval) )
para <- c("b", "sigma", "mu.phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(unique(IND_ID)), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
log.Int = log(Interval) )
para <- c("b", "sigma", "mu.phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
# Output ----
#summary(post)
source("function_jags2bugs.R")
re <- jags2bugs(post$mcmc)
print(re, 2)
PP <- sapply(1:ncol(re$sims.matrix), function(x) mean(re$sims.matrix[,x]>0) )
PN <- 1-PP
#write.csv(cbind(re$summary[,c(5,3,7,8,9)], PP, PN), paste0("result/summary_", species, Sys.Date(), FQ,".csv") )
#write.csv(re$sims.matrix, paste0("result/MCMCsample_", species, Sys.Date(), FQ,".csv") )
# Data preparation ----
dat_raw <- read.csv("data/data_itg2019-10-24.csv")
dat <- dat_raw[dat_raw$species=="STJ",] # species: "STJ", "BHC", "CRC"
species <- unique(dat$species)
D <- dat[is.na(dat$St_Size)==0,]
n.ad <- 100
n.iter <- 3E+3
n.thin <- max(3, ceiling(n.iter/500))
burn <- ceiling(max(10, n.iter/2))
Sample <- ceiling(n.iter/n.thin)
# Data for JAGS ----
##Response
Y <- D$Sec_recap*20-10 #Conversion from recapture section ID to distance (m) to the downstream end
Mu <- D$Sec_cap*20-10 #Conversion from capture section ID to distance (m) to the downstream end
Yrecap <- D$Yrecap
##Explanatory
Size <- c(scale(D$St_Size) ) # standardized body size
Stream <- as.numeric(D$Stream) - 1
Flow <- as.numeric(D$Q99 > 0); FQ <- "Q99" # presence/absence of 99 percentile disturbance
#Flow <- as.numeric(D$Q90 > 0); FQ <- "Q90" # presence/absence of 90 percentile disturbance
Temp <- c(scale(D$Temp) ) # standardized water temperature
##Control
Interval <- D$Interval
DL <- D$DL
UL <- D$UL
IND_ID <- as.numeric(factor(D$IND_ID, levels = unique(D$IND_ID)) )
#Run JAGS----
Djags <- list( Y = Y, Mu = Mu, Yrecap = Yrecap, Nsample = length(Y), Nind = length(unique(IND_ID)), DL = DL, UL = UL,
Size = Size, Stream = Stream, Flow = Flow, Temp = Temp, IND_ID = IND_ID,
log.Int = log(Interval) )
para <- c("b", "sigma", "mu.phi")
inits <- replicate(3, list(b = c(3.5, rep(NA, 5)), .RNG.name="base::Wichmann-Hill", .RNG.seed = NA), simplify = FALSE)
for(i in 1:3){ inits[[i]]$.RNG.seed <- i }
library(runjags)
m <- read.jagsfile("bayesmodel/model_laplace_R1.R")
post <- run.jags(m$model, monitor = para, data = Djags,
n.chains = 3, inits = inits, method = "parallel",
burnin = burn, sample = Sample, adapt = n.ad, thin = n.thin,
n.sims = 3, modules = "glm")
